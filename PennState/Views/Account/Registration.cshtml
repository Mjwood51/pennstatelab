
@model PennState.Models.RegistrationView

@{
    /**/

    ViewBag.Title = "Registration";
}
<div class="page-init">
    <h2>Registration</h2>

    @if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
    {
        if (ViewBag.Message != null)
        {
            <div class="alert alert-success">
                <strong>Success!</strong> @ViewBag.Message
            </div>
        }
    }
    else
    {
        using (Html.BeginForm( new { htmlAttributes = new { @id = "regId", @onsubmit = "new regValid()" } }))
        {
            @Html.AntiForgeryToken()
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-horizontal">
                <div class="row">
                    <div class="control-group">
                        @Html.LabelFor(model => model.Username, "Username")<br />
                        @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row">
                    <div class="controlgroup" style="padding-right:20px">
                        @Html.LabelFor(model => model.FirstName, "First Name")<br />
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(model => model.LastName, "Last Name")<br />
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="control-group" style="padding-right:20px">
                        @Html.LabelFor(model => model.Email, "Email Address")<br />
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(model => model.Role, "Role Type")<br />
                        @Html.EditorFor(model => model.Role, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    </div>
                </div>

                <div class="row">
                    <div class="control-group" style="padding-right:20px">
                        @Html.LabelFor(model => model.Password, "Password")<br />
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(model => model.ConfirmPassword, "Confirm Password")<br />
                        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row">
                    <div class="control-group">
                        <input type="submit" value="Create" class="btn btn-primary btn-lg" />
                    </div>
                </div>
            </div>

            if (ViewBag.Message != null)
            {
                <div class="alert alert-danger">
                    <strong>Error!</strong> @ViewBag.Message
                </div>
            }

        }
    }
    </div>
    @section Scripts{

        <script src="~/Scripts/jquery.validate.min.js"></script>
        <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
        <script type="text/javascript">
            function regValid() {
                if (!$("#regId").valid()) {
                    return false;
                }
            };

            $.ajax({
                type: "GET",
                url: "/account/registration",
                data: {
                    action: 'Registration',
                    objectId: '09028139800c59e3',
                    Db: 'LabDBContext'
                }
            });
        </script>
    }
